import sys
sys.path.append("..")
import numpy as np
from env import adsr, cos_env
from osc import noise, sine
from biquad import biquad_filter
from instruments.utils import calc_freq, calc_delayar


def flute(note_no: int, velocity: int, gate: float, duration: float, sr: int =44100) -> np.ndarray:
    note_to_vca_depths: np.ndarray = np.array([
        [0.932, 0.042, 0.175, 0.014, 0.029, 0.008, 0.026, 0.015, 0.019, 0.010, 0.008, 0.004, 0.003, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.001, 0.000, 0.000, 0.001, 0.000, 0.001, 0.000, 0.001],
        [0.932, 0.091, 0.159, 0.021, 0.035, 0.015, 0.039, 0.016, 0.026, 0.010, 0.006, 0.004, 0.002, 0.002, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.001, 0.000, 0.001, 0.001, 0.001, 0.001, 0.000, 0.001, 0.000, 0.001],
        [0.932, 0.150, 0.108, 0.024, 0.040, 0.026, 0.039, 0.014, 0.018, 0.009, 0.002, 0.004, 0.002, 0.003, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.932, 0.165, 0.086, 0.027, 0.050, 0.033, 0.026, 0.010, 0.007, 0.007, 0.002, 0.003, 0.001, 0.002, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.932, 0.215, 0.095, 0.032, 0.049, 0.047, 0.015, 0.011, 0.006, 0.006, 0.002, 0.002, 0.002, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.932, 0.448, 0.116, 0.070, 0.079, 0.058, 0.010, 0.009, 0.004, 0.005, 0.002, 0.002, 0.002, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.932, 0.685, 0.149, 0.130, 0.119, 0.047, 0.012, 0.006, 0.005, 0.005, 0.003, 0.002, 0.002, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.001, 0.001],
        [0.932, 0.594, 0.226, 0.147, 0.118, 0.046, 0.017, 0.007, 0.009, 0.004, 0.002, 0.002, 0.002, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.001, 0.001, 0.001, 0.001],
        [0.932, 0.532, 0.267, 0.116, 0.113, 0.057, 0.020, 0.007, 0.008, 0.003, 0.002, 0.002, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001],
        [0.932, 0.583, 0.190, 0.075, 0.074, 0.036, 0.013, 0.005, 0.004, 0.003, 0.002, 0.002, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001],
        [0.932, 0.407, 0.128, 0.052, 0.025, 0.010, 0.005, 0.003, 0.002, 0.002, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.001, 0.001, 0.000, 0.001, 0.000, 0.000, 0.000, 0.000],
        [0.932, 0.213, 0.118, 0.039, 0.015, 0.006, 0.003, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.932, 0.156, 0.105, 0.042, 0.014, 0.004, 0.002, 0.002, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.932, 0.128, 0.110, 0.063, 0.014, 0.004, 0.002, 0.002, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.932, 0.092, 0.120, 0.051, 0.012, 0.004, 0.002, 0.001, 0.001, 0.000, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.932, 0.063, 0.107, 0.024, 0.007, 0.002, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.932, 0.057, 0.093, 0.017, 0.004, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.932, 0.068, 0.077, 0.013, 0.004, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.932, 0.105, 0.051, 0.007, 0.004, 0.002, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.932, 0.161, 0.053, 0.005, 0.002, 0.002, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.932, 0.176, 0.065, 0.003, 0.003, 0.002, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.932, 0.139, 0.049, 0.003, 0.003, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.932, 0.087, 0.038, 0.002, 0.002, 0.000, 0.000, 0.001, 0.000, 0.000, 0.000, 0.000, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.932, 0.089, 0.052, 0.006, 0.004, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.932, 0.194, 0.089, 0.017, 0.009, 0.003, 0.003, 0.002, 0.002, 0.001, 0.002, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.932, 0.248, 0.103, 0.022, 0.011, 0.004, 0.004, 0.002, 0.002, 0.002, 0.002, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.932, 0.148, 0.067, 0.013, 0.006, 0.003, 0.003, 0.001, 0.001, 0.002, 0.001, 0.001, 0.001, 0.000, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.932, 0.070, 0.036, 0.006, 0.004, 0.002, 0.001, 0.001, 0.002, 0.002, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.932, 0.082, 0.030, 0.006, 0.006, 0.003, 0.001, 0.001, 0.005, 0.002, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.932, 0.077, 0.034, 0.007, 0.005, 0.002, 0.001, 0.002, 0.005, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.932, 0.041, 0.035, 0.006, 0.005, 0.002, 0.002, 0.002, 0.002, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.932, 0.020, 0.024, 0.003, 0.003, 0.002, 0.002, 0.003, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.932, 0.019, 0.024, 0.005, 0.003, 0.002, 0.002, 0.002, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.932, 0.019, 0.028, 0.008, 0.003, 0.002, 0.003, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.932, 0.023, 0.023, 0.006, 0.003, 0.009, 0.003, 0.002, 0.002, 0.002, 0.003, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.932, 0.038, 0.029, 0.006, 0.005, 0.021, 0.005, 0.004, 0.004, 0.004, 0.006, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.932, 0.046, 0.037, 0.007, 0.006, 0.026, 0.007, 0.005, 0.005, 0.005, 0.006, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.932, 0.046, 0.037, 0.007, 0.006, 0.026, 0.007, 0.005, 0.005, 0.004, 0.002, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.932, 0.046, 0.037, 0.007, 0.006, 0.026, 0.007, 0.005, 0.005, 0.002, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000]
    ])
    N_PARTIAL: int = 30
    LOWEST_NOTE_NO: int = 59
    freq: float = calc_freq(note_no)

    vco_as: np.ndarray = np.repeat(0, N_PARTIAL)
    vco_ds: np.ndarray = np.repeat(0, N_PARTIAL)
    vco_ss: np.ndarray = np.repeat(1, N_PARTIAL)
    vco_rs: np.ndarray = np.repeat(0, N_PARTIAL)
    vco_gates: np.ndarray = np.repeat(duration, N_PARTIAL)
    vco_durs: np.ndarray = np.repeat(duration, N_PARTIAL)
    vco_offsets: np.ndarray = freq * np.arange(1, 1+N_PARTIAL)
    vco_depths: np.ndarray = np.repeat(0, N_PARTIAL)

    vca_delays: np.ndarray = calc_delayar(vco_offsets, p1=0, p2=-0.1, p3=8000/12, p4=0.2, is_delay=True)
    vca_as: np.ndarray = calc_delayar(vco_offsets, p1=0, p2=0.1, p3=8000/12, p4=0.2, is_sub=True)
    vca_ss: np.ndarray = np.repeat(1, N_PARTIAL)
    vca_rs: np.ndarray = calc_delayar(vco_offsets, p1=0, p2=0.2, p3=8000/12, p4=0.4, is_sub=True)
    vca_gates: np.ndarray = np.repeat(gate, N_PARTIAL)
    vca_durs: np.ndarray = np.repeat(duration, N_PARTIAL)
    vca_offsets: np.ndarray = np.repeat(0, N_PARTIAL)
    vca_depths: np.ndarray = note_to_vca_depths[note_no-LOWEST_NOTE_NO]

    y: np.ndarray = np.zeros(int(duration * sr))
    for i in range(N_PARTIAL):
        jitter: np.ndaray = biquad_filter(data=noise(sec=duration, sr=sr),
                                          filter_type="lowpass", fc=40, Q=1/np.sqrt(2), sr=sr)
        jitter = calc_delayar(note_no, p1=108, p2=1, p3=150/12, p4=20) * jitter / np.max(np.abs(jitter))
        vco: np.ndarray = jitter + vco_offsets[i] \
                        + vco_depths[i] * adsr(vco_as[i], vco_ds[i], vco_ss[i], vco_rs[i], vco_gates[i], vco_durs[i], sr=sr)

        shimmer: np.ndarray = biquad_filter(data=noise(sec=duration, sr=sr),
                                            filter_type="lowpass", fc=40, Q=1/np.sqrt(2), sr=sr)
        shimmer = calc_delayar(i+1, p1=1, p2=-0.3, p3=10/12, p4=0.8) * shimmer / np.max(np.abs(shimmer))
        vca: np.ndarray = vca_offsets[i] \
                        + vca_depths[i] * cos_env(vca_delays[i], vca_as[i], vca_ss[i], vca_rs[i], vca_gates[i], vca_durs[i], sr=sr)
        vca = np.maximum((1 + shimmer) * vca, 0)

        y += vca * sine(fs=vco, sr=sr, sec=duration)
    return (velocity / 127) / np.max(np.abs(y)) * y


def piccolo(note_no: int, velocity: int, gate: float, duration: float, sr: int =44100) -> np.ndarray:
    note_to_vca_depths: np.ndarray = np.array([
        [0.523, 0.053, 0.067, 0.058, 0.067, 0.015, 0.006, 0.009, 0.002, 0.002, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.523, 0.058, 0.085, 0.061, 0.060, 0.015, 0.005, 0.008, 0.001, 0.001, 0.002, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.523, 0.086, 0.079, 0.051, 0.047, 0.014, 0.006, 0.006, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.523, 0.342, 0.077, 0.123, 0.089, 0.029, 0.011, 0.004, 0.002, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.523, 0.572, 0.111, 0.235, 0.148, 0.045, 0.011, 0.003, 0.002, 0.001, 0.001, 0.002, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.523, 0.347, 0.117, 0.197, 0.104, 0.027, 0.006, 0.003, 0.002, 0.001, 0.000, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.523, 0.114, 0.106, 0.117, 0.064, 0.007, 0.005, 0.002, 0.002, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.523, 0.096, 0.111, 0.094, 0.083, 0.004, 0.007, 0.003, 0.002, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.523, 0.105, 0.113, 0.074, 0.075, 0.003, 0.007, 0.004, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.523, 0.131, 0.108, 0.052, 0.045, 0.004, 0.005, 0.003, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.523, 0.121, 0.094, 0.032, 0.025, 0.005, 0.004, 0.003, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.523, 0.090, 0.083, 0.021, 0.012, 0.004, 0.004, 0.002, 0.002, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.523, 0.134, 0.102, 0.029, 0.007, 0.003, 0.004, 0.002, 0.002, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.523, 0.221, 0.135, 0.051, 0.011, 0.003, 0.004, 0.002, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.523, 0.196, 0.115, 0.046, 0.010, 0.002, 0.003, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.523, 0.095, 0.061, 0.019, 0.005, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.523, 0.045, 0.053, 0.006, 0.003, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.523, 0.029, 0.060, 0.006, 0.005, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.523, 0.032, 0.048, 0.004, 0.005, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.523, 0.059, 0.031, 0.002, 0.005, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.523, 0.058, 0.020, 0.002, 0.004, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.523, 0.033, 0.013, 0.003, 0.002, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.523, 0.022, 0.009, 0.003, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.523, 0.020, 0.009, 0.003, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.523, 0.021, 0.008, 0.002, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.523, 0.029, 0.011, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.523, 0.030, 0.014, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.523, 0.024, 0.010, 0.001, 0.000, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.523, 0.034, 0.006, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.523, 0.058, 0.005, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.523, 0.053, 0.005, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.523, 0.021, 0.006, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.523, 0.007, 0.005, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.523, 0.019, 0.004, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.523, 0.036, 0.004, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.523, 0.045, 0.002, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.523, 0.048, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000]
    ])
    N_PARTIAL: int = 30
    LOWEST_NOTE_NO: int = 72
    freq: float = calc_freq(note_no)

    vco_as: np.ndarray = np.repeat(0, N_PARTIAL)
    vco_ds: np.ndarray = np.repeat(0, N_PARTIAL)
    vco_ss: np.ndarray = np.repeat(1, N_PARTIAL)
    vco_rs: np.ndarray = np.repeat(0, N_PARTIAL)
    vco_gates: np.ndarray = np.repeat(duration, N_PARTIAL)
    vco_durs: np.ndarray = np.repeat(duration, N_PARTIAL)
    vco_offsets: np.ndarray = freq * np.arange(1, 1+N_PARTIAL)
    vco_depths: np.ndarray = np.repeat(0, N_PARTIAL)

    vca_delays: np.ndarray = calc_delayar(vco_offsets, p1=0, p2=-0.1, p3=8000/12, p4=0.2, is_delay=True)
    vca_as: np.ndarray = calc_delayar(vco_offsets, p1=0, p2=0.1, p3=8000/12, p4=0.2, is_sub=True)
    vca_ss: np.ndarray = np.repeat(1, N_PARTIAL)
    vca_rs: np.ndarray = calc_delayar(vco_offsets, p1=0, p2=0.2, p3=8000/12, p4=0.4, is_sub=True)
    vca_gates: np.ndarray = np.repeat(gate, N_PARTIAL)
    vca_durs: np.ndarray = np.repeat(duration, N_PARTIAL)
    vca_offsets: np.ndarray = np.repeat(0, N_PARTIAL)
    vca_depths: np.ndarray = note_to_vca_depths[note_no-LOWEST_NOTE_NO]

    y: np.ndarray = np.zeros(int(duration * sr))
    for i in range(N_PARTIAL):
        jitter: np.ndaray = biquad_filter(data=noise(sec=duration, sr=sr),
                                          filter_type="lowpass", fc=40, Q=1/np.sqrt(2), sr=sr)
        jitter = calc_delayar(note_no, p1=108, p2=1, p3=150/12, p4=20) * jitter / np.max(np.abs(jitter))
        vco: np.ndarray = jitter + vco_offsets[i] \
                        + vco_depths[i] * adsr(vco_as[i], vco_ds[i], vco_ss[i], vco_rs[i], vco_gates[i], vco_durs[i], sr=sr)

        shimmer: np.ndarray = biquad_filter(data=noise(sec=duration, sr=sr),
                                            filter_type="lowpass", fc=40, Q=1/np.sqrt(2), sr=sr)
        shimmer = calc_delayar(i+1, p1=1, p2=-0.3, p3=50/12, p4=0.8) * shimmer / np.max(np.abs(shimmer))
        vca: np.ndarray = vca_offsets[i] \
                        + vca_depths[i] * cos_env(vca_delays[i], vca_as[i], vca_ss[i], vca_rs[i], vca_gates[i], vca_durs[i], sr=sr)
        vca = np.maximum((1 + shimmer) * vca, 0)

        y += vca * sine(fs=vco, sr=sr, sec=duration)
    return (velocity / 127) / np.max(np.abs(y)) * y


def clarinet(note_no: int, velocity: int, gate: float, duration: float, sr: int =44100) -> np.ndarray:
    note_to_vca_depths: np.ndarray = np.array([
        [0.302, 0.016, 0.205, 0.034, 0.214, 0.051, 0.119, 0.092, 0.074, 0.037, 0.068, 0.008, 0.011, 0.015, 0.022, 0.010, 0.015, 0.009, 0.014, 0.004, 0.006, 0.005, 0.004, 0.004, 0.003, 0.002, 0.003, 0.004, 0.002, 0.003],
        [0.302, 0.011, 0.193, 0.022, 0.205, 0.031, 0.157, 0.039, 0.069, 0.022, 0.053, 0.011, 0.017, 0.015, 0.030, 0.013, 0.016, 0.014, 0.010, 0.007, 0.003, 0.005, 0.003, 0.004, 0.003, 0.002, 0.003, 0.002, 0.003, 0.002],
        [0.302, 0.007, 0.200, 0.013, 0.204, 0.018, 0.168, 0.006, 0.045, 0.011, 0.034, 0.011, 0.030, 0.011, 0.030, 0.014, 0.017, 0.013, 0.010, 0.011, 0.003, 0.005, 0.004, 0.003, 0.003, 0.002, 0.002, 0.002, 0.002, 0.001],
        [0.302, 0.005, 0.216, 0.011, 0.192, 0.024, 0.107, 0.006, 0.040, 0.009, 0.030, 0.014, 0.030, 0.006, 0.013, 0.009, 0.014, 0.013, 0.012, 0.016, 0.005, 0.005, 0.004, 0.002, 0.002, 0.002, 0.001, 0.002, 0.002, 0.002],
        [0.302, 0.005, 0.230, 0.012, 0.162, 0.030, 0.051, 0.009, 0.049, 0.011, 0.033, 0.018, 0.016, 0.004, 0.003, 0.005, 0.009, 0.014, 0.013, 0.014, 0.004, 0.005, 0.002, 0.001, 0.001, 0.002, 0.002, 0.002, 0.003, 0.001],
        [0.302, 0.004, 0.274, 0.012, 0.162, 0.025, 0.034, 0.013, 0.041, 0.010, 0.020, 0.015, 0.011, 0.008, 0.005, 0.007, 0.005, 0.010, 0.009, 0.006, 0.003, 0.003, 0.001, 0.001, 0.001, 0.002, 0.002, 0.002, 0.002, 0.001],
        [0.302, 0.004, 0.306, 0.011, 0.196, 0.017, 0.036, 0.023, 0.029, 0.007, 0.012, 0.012, 0.014, 0.012, 0.008, 0.010, 0.006, 0.009, 0.005, 0.003, 0.003, 0.001, 0.001, 0.001, 0.001, 0.002, 0.002, 0.001, 0.001, 0.001],
        [0.302, 0.004, 0.295, 0.009, 0.168, 0.018, 0.063, 0.030, 0.022, 0.009, 0.019, 0.012, 0.010, 0.013, 0.006, 0.012, 0.009, 0.006, 0.004, 0.003, 0.002, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000],
        [0.302, 0.003, 0.260, 0.010, 0.086, 0.024, 0.088, 0.018, 0.022, 0.014, 0.019, 0.008, 0.003, 0.012, 0.010, 0.010, 0.004, 0.002, 0.002, 0.001, 0.002, 0.002, 0.001, 0.002, 0.002, 0.000, 0.001, 0.000, 0.000, 0.000],
        [0.302, 0.004, 0.227, 0.020, 0.075, 0.029, 0.078, 0.008, 0.019, 0.018, 0.009, 0.005, 0.003, 0.015, 0.012, 0.006, 0.001, 0.001, 0.000, 0.001, 0.002, 0.002, 0.001, 0.001, 0.001, 0.000, 0.001, 0.000, 0.000, 0.000],
        [0.302, 0.005, 0.229, 0.034, 0.119, 0.047, 0.044, 0.011, 0.015, 0.017, 0.003, 0.006, 0.006, 0.014, 0.008, 0.004, 0.001, 0.001, 0.002, 0.001, 0.002, 0.001, 0.001, 0.000, 0.000, 0.000, 0.001, 0.000, 0.000, 0.000],
        [0.302, 0.005, 0.262, 0.036, 0.131, 0.061, 0.024, 0.012, 0.015, 0.016, 0.006, 0.010, 0.011, 0.010, 0.004, 0.003, 0.001, 0.002, 0.003, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000],
        [0.302, 0.006, 0.339, 0.029, 0.115, 0.041, 0.027, 0.009, 0.015, 0.012, 0.010, 0.015, 0.012, 0.006, 0.002, 0.002, 0.001, 0.002, 0.002, 0.001, 0.001, 0.000, 0.000, 0.001, 0.000, 0.001, 0.000, 0.001, 0.000, 0.000],
        [0.302, 0.005, 0.443, 0.026, 0.150, 0.015, 0.038, 0.007, 0.014, 0.007, 0.009, 0.014, 0.006, 0.002, 0.002, 0.002, 0.001, 0.002, 0.001, 0.000, 0.000, 0.000, 0.000, 0.001, 0.000, 0.001, 0.000, 0.001, 0.000, 0.000],
        [0.302, 0.004, 0.422, 0.024, 0.175, 0.008, 0.032, 0.009, 0.013, 0.012, 0.013, 0.011, 0.003, 0.001, 0.002, 0.002, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.001, 0.000, 0.001, 0.000, 0.001, 0.000, 0.000],
        [0.302, 0.006, 0.255, 0.022, 0.113, 0.011, 0.029, 0.017, 0.011, 0.020, 0.014, 0.007, 0.001, 0.002, 0.003, 0.002, 0.001, 0.001, 0.000, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000],
        [0.302, 0.006, 0.269, 0.034, 0.059, 0.017, 0.041, 0.023, 0.010, 0.018, 0.009, 0.003, 0.001, 0.001, 0.003, 0.002, 0.001, 0.001, 0.000, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.302, 0.007, 0.394, 0.051, 0.041, 0.019, 0.036, 0.020, 0.011, 0.007, 0.006, 0.002, 0.001, 0.001, 0.002, 0.002, 0.001, 0.001, 0.000, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.001, 0.000, 0.001, 0.001],
        [0.302, 0.030, 0.285, 0.053, 0.032, 0.017, 0.020, 0.011, 0.009, 0.002, 0.004, 0.002, 0.002, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.001, 0.001],
        [0.302, 0.061, 0.142, 0.055, 0.035, 0.026, 0.018, 0.007, 0.007, 0.002, 0.003, 0.002, 0.001, 0.000, 0.001, 0.001, 0.000, 0.001, 0.000, 0.000, 0.000, 0.001, 0.000, 0.000, 0.001, 0.000, 0.001, 0.000, 0.000, 0.000],
        [0.302, 0.061, 0.104, 0.053, 0.045, 0.045, 0.021, 0.007, 0.005, 0.002, 0.001, 0.002, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.001, 0.000, 0.000, 0.001, 0.001, 0.000, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.302, 0.054, 0.070, 0.033, 0.043, 0.045, 0.013, 0.006, 0.002, 0.002, 0.000, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.302, 0.057, 0.087, 0.018, 0.024, 0.027, 0.010, 0.007, 0.002, 0.001, 0.000, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.302, 0.043, 0.113, 0.016, 0.014, 0.013, 0.012, 0.010, 0.003, 0.001, 0.000, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.001, 0.000, 0.000, 0.000, 0.000, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.302, 0.027, 0.091, 0.014, 0.014, 0.008, 0.007, 0.008, 0.002, 0.000, 0.001, 0.000, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.302, 0.021, 0.059, 0.009, 0.014, 0.009, 0.004, 0.004, 0.002, 0.000, 0.001, 0.000, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.302, 0.018, 0.035, 0.004, 0.014, 0.010, 0.004, 0.002, 0.001, 0.001, 0.000, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.302, 0.022, 0.033, 0.004, 0.017, 0.008, 0.005, 0.002, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.302, 0.027, 0.040, 0.010, 0.021, 0.009, 0.005, 0.002, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.302, 0.042, 0.030, 0.017, 0.016, 0.011, 0.003, 0.001, 0.001, 0.001, 0.000, 0.001, 0.001, 0.000, 0.001, 0.000, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.302, 0.060, 0.017, 0.025, 0.008, 0.010, 0.003, 0.002, 0.001, 0.001, 0.000, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.302, 0.057, 0.018, 0.042, 0.009, 0.008, 0.002, 0.002, 0.002, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.302, 0.045, 0.022, 0.045, 0.011, 0.005, 0.002, 0.002, 0.002, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.302, 0.042, 0.022, 0.028, 0.013, 0.003, 0.002, 0.002, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.302, 0.046, 0.034, 0.020, 0.010, 0.004, 0.002, 0.002, 0.001, 0.002, 0.002, 0.002, 0.001, 0.001, 0.001, 0.001, 0.000, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.302, 0.044, 0.055, 0.019, 0.006, 0.003, 0.003, 0.001, 0.001, 0.002, 0.001, 0.002, 0.001, 0.001, 0.001, 0.001, 0.000, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.302, 0.035, 0.060, 0.019, 0.004, 0.002, 0.003, 0.001, 0.001, 0.001, 0.000, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.302, 0.035, 0.044, 0.017, 0.002, 0.001, 0.001, 0.002, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.302, 0.094, 0.020, 0.017, 0.004, 0.002, 0.002, 0.001, 0.002, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.302, 0.255, 0.019, 0.023, 0.008, 0.003, 0.003, 0.002, 0.003, 0.001, 0.002, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.302, 0.426, 0.065, 0.023, 0.009, 0.004, 0.005, 0.006, 0.005, 0.003, 0.006, 0.005, 0.002, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.302, 0.440, 0.103, 0.016, 0.012, 0.005, 0.008, 0.010, 0.005, 0.005, 0.007, 0.009, 0.002, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.302, 0.400, 0.083, 0.015, 0.012, 0.005, 0.007, 0.010, 0.004, 0.005, 0.005, 0.006, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.302, 0.593, 0.079, 0.019, 0.015, 0.008, 0.007, 0.007, 0.004, 0.004, 0.003, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.302, 0.737, 0.126, 0.043, 0.033, 0.028, 0.015, 0.022, 0.008, 0.011, 0.006, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.302, 0.599, 0.169, 0.083, 0.051, 0.053, 0.023, 0.050, 0.012, 0.023, 0.011, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000]
    ])
    N_PARTIAL: int = 30
    LOWEST_NOTE_NO: int = 50
    freq: float = calc_freq(note_no)

    vco_as: np.ndarray = np.repeat(0, N_PARTIAL)
    vco_ds: np.ndarray = np.repeat(0, N_PARTIAL)
    vco_ss: np.ndarray = np.repeat(1, N_PARTIAL)
    vco_rs: np.ndarray = np.repeat(0, N_PARTIAL)
    vco_gates: np.ndarray = np.repeat(duration, N_PARTIAL)
    vco_durs: np.ndarray = np.repeat(duration, N_PARTIAL)
    vco_offsets: np.ndarray = freq * np.arange(1, 1+N_PARTIAL)
    vco_depths: np.ndarray = np.repeat(0, N_PARTIAL)

    vca_delays: np.ndarray = calc_delayar(vco_offsets, p1=0, p2=-0.05, p3=8000/12, p4=0.1, is_delay=True)
    vca_as: np.ndarray = calc_delayar(vco_offsets, p1=0, p2=0.05, p3=8000/12, p4=0.1, is_sub=True)
    vca_ss: np.ndarray = np.repeat(1, N_PARTIAL)
    vca_rs: np.ndarray = calc_delayar(vco_offsets, p1=0, p2=0.2, p3=8000/12, p4=0.4, is_sub=True)
    vca_gates: np.ndarray = np.repeat(gate, N_PARTIAL)
    vca_durs: np.ndarray = np.repeat(duration, N_PARTIAL)
    vca_offsets: np.ndarray = np.repeat(0, N_PARTIAL)
    vca_depths: np.ndarray = note_to_vca_depths[note_no-LOWEST_NOTE_NO]

    y: np.ndarray = np.zeros(int(duration * sr))
    for i in range(N_PARTIAL):
        jitter: np.ndaray = biquad_filter(data=noise(sec=duration, sr=sr),
                                          filter_type="lowpass", fc=40, Q=1/np.sqrt(2), sr=sr)
        jitter = calc_delayar(note_no, p1=108, p2=1, p3=150/12, p4=20) * jitter / np.max(np.abs(jitter))
        vco: np.ndarray = jitter + vco_offsets[i] \
                        + vco_depths[i] * adsr(vco_as[i], vco_ds[i], vco_ss[i], vco_rs[i], vco_gates[i], vco_durs[i], sr=sr)

        shimmer: np.ndarray = biquad_filter(data=noise(sec=duration, sr=sr),
                                            filter_type="lowpass", fc=40, Q=1/np.sqrt(2), sr=sr)
        shimmer = calc_delayar(i+1, p1=1, p2=-0.3, p3=100/12, p4=0.8) * shimmer / np.max(np.abs(shimmer))
        vca: np.ndarray = vca_offsets[i] \
                        + vca_depths[i] * cos_env(vca_delays[i], vca_as[i], vca_ss[i], vca_rs[i], vca_gates[i], vca_durs[i], sr=sr)
        vca = np.maximum((1 + shimmer) * vca, 0)

        y += vca * sine(fs=vco, sr=sr, sec=duration)
    return (velocity / 127) / np.max(np.abs(y)) * y


def oboe(note_no: int, velocity: int, gate: float, duration: float, sr: int =44100) -> np.ndarray:
    note_to_vca_depths: np.ndarray = np.array([
        [0.079, 0.107, 0.068, 0.138, 0.232, 0.145, 0.082, 0.028, 0.018, 0.014, 0.023, 0.026, 0.013, 0.022, 0.023, 0.010, 0.007, 0.004, 0.002, 0.003, 0.000, 0.001, 0.002, 0.002, 0.002, 0.001, 0.001, 0.001, 0.001, 0.001],
        [0.079, 0.106, 0.055, 0.134, 0.268, 0.142, 0.059, 0.023, 0.016, 0.019, 0.025, 0.021, 0.015, 0.017, 0.016, 0.012, 0.007, 0.004, 0.002, 0.003, 0.001, 0.002, 0.002, 0.001, 0.002, 0.001, 0.001, 0.001, 0.001, 0.001],
        [0.079, 0.107, 0.050, 0.149, 0.327, 0.135, 0.053, 0.020, 0.015, 0.026, 0.035, 0.018, 0.032, 0.019, 0.018, 0.021, 0.011, 0.008, 0.003, 0.004, 0.003, 0.003, 0.003, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000],
        [0.079, 0.108, 0.076, 0.190, 0.306, 0.113, 0.055, 0.013, 0.014, 0.026, 0.041, 0.021, 0.046, 0.024, 0.021, 0.022, 0.014, 0.010, 0.004, 0.005, 0.003, 0.003, 0.002, 0.001, 0.001, 0.001, 0.001, 0.000, 0.001, 0.000],
        [0.079, 0.092, 0.112, 0.258, 0.244, 0.068, 0.031, 0.007, 0.017, 0.027, 0.034, 0.023, 0.033, 0.017, 0.011, 0.011, 0.009, 0.006, 0.004, 0.004, 0.002, 0.002, 0.001, 0.001, 0.000, 0.001, 0.001, 0.000, 0.000, 0.000],
        [0.079, 0.076, 0.135, 0.343, 0.193, 0.034, 0.012, 0.019, 0.034, 0.025, 0.028, 0.020, 0.014, 0.007, 0.004, 0.004, 0.003, 0.003, 0.003, 0.002, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.079, 0.073, 0.155, 0.442, 0.126, 0.020, 0.013, 0.041, 0.052, 0.018, 0.025, 0.015, 0.010, 0.005, 0.003, 0.003, 0.002, 0.002, 0.001, 0.001, 0.001, 0.000, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.079, 0.081, 0.176, 0.458, 0.074, 0.008, 0.019, 0.057, 0.043, 0.021, 0.023, 0.013, 0.013, 0.007, 0.004, 0.003, 0.002, 0.003, 0.001, 0.002, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000],
        [0.079, 0.098, 0.218, 0.304, 0.038, 0.006, 0.041, 0.064, 0.026, 0.029, 0.029, 0.015, 0.015, 0.009, 0.006, 0.006, 0.004, 0.002, 0.001, 0.002, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000],
        [0.079, 0.117, 0.289, 0.180, 0.025, 0.014, 0.078, 0.054, 0.038, 0.042, 0.033, 0.016, 0.016, 0.011, 0.009, 0.008, 0.003, 0.001, 0.001, 0.002, 0.001, 0.002, 0.001, 0.002, 0.001, 0.001, 0.001, 0.000, 0.001, 0.001],
        [0.079, 0.136, 0.364, 0.173, 0.029, 0.025, 0.084, 0.043, 0.048, 0.052, 0.025, 0.019, 0.016, 0.011, 0.009, 0.005, 0.002, 0.001, 0.001, 0.003, 0.002, 0.002, 0.001, 0.001, 0.000, 0.001, 0.001, 0.000, 0.001, 0.001],
        [0.079, 0.150, 0.550, 0.126, 0.021, 0.047, 0.049, 0.045, 0.037, 0.042, 0.013, 0.016, 0.009, 0.007, 0.004, 0.002, 0.002, 0.001, 0.001, 0.002, 0.002, 0.001, 0.001, 0.001, 0.000, 0.000, 0.001, 0.001, 0.001, 0.001],
        [0.079, 0.152, 0.666, 0.052, 0.016, 0.065, 0.023, 0.038, 0.025, 0.028, 0.008, 0.009, 0.003, 0.003, 0.002, 0.001, 0.001, 0.001, 0.001, 0.001, 0.002, 0.001, 0.001, 0.001, 0.000, 0.000, 0.001, 0.001, 0.001, 0.000],
        [0.079, 0.167, 0.407, 0.033, 0.015, 0.073, 0.030, 0.021, 0.019, 0.020, 0.009, 0.006, 0.002, 0.002, 0.002, 0.001, 0.002, 0.002, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.001, 0.001, 0.001, 0.001, 0.000],
        [0.079, 0.175, 0.139, 0.036, 0.014, 0.079, 0.037, 0.016, 0.019, 0.011, 0.008, 0.005, 0.002, 0.001, 0.002, 0.001, 0.002, 0.003, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.001, 0.001, 0.000],
        [0.079, 0.140, 0.078, 0.020, 0.019, 0.052, 0.021, 0.015, 0.014, 0.005, 0.005, 0.002, 0.001, 0.001, 0.001, 0.001, 0.001, 0.002, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.001, 0.000, 0.000, 0.000, 0.000],
        [0.079, 0.172, 0.047, 0.009, 0.027, 0.019, 0.008, 0.010, 0.005, 0.003, 0.001, 0.000, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.079, 0.284, 0.022, 0.012, 0.027, 0.027, 0.011, 0.008, 0.004, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.079, 0.420, 0.011, 0.019, 0.027, 0.043, 0.012, 0.006, 0.003, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.001, 0.000, 0.000, 0.000, 0.000],
        [0.079, 0.454, 0.012, 0.032, 0.026, 0.035, 0.010, 0.004, 0.002, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.079, 0.254, 0.019, 0.037, 0.019, 0.020, 0.009, 0.004, 0.002, 0.001, 0.001, 0.001, 0.000, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.079, 0.092, 0.023, 0.031, 0.021, 0.014, 0.008, 0.002, 0.001, 0.001, 0.001, 0.001, 0.000, 0.001, 0.000, 0.000, 0.000, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.079, 0.101, 0.022, 0.021, 0.024, 0.010, 0.006, 0.000, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.001, 0.000, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.079, 0.086, 0.022, 0.015, 0.016, 0.005, 0.004, 0.000, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.079, 0.039, 0.016, 0.015, 0.012, 0.002, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.079, 0.026, 0.015, 0.012, 0.012, 0.002, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.079, 0.045, 0.024, 0.012, 0.011, 0.002, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.079, 0.056, 0.024, 0.016, 0.011, 0.001, 0.000, 0.000, 0.000, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.079, 0.035, 0.015, 0.013, 0.007, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.079, 0.015, 0.010, 0.011, 0.002, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.079, 0.020, 0.007, 0.009, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.079, 0.045, 0.029, 0.006, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.079, 0.085, 0.063, 0.008, 0.002, 0.002, 0.002, 0.003, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.079, 0.085, 0.053, 0.008, 0.002, 0.002, 0.002, 0.003, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.079, 0.048, 0.024, 0.005, 0.001, 0.002, 0.002, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000]
    ])
    N_PARTIAL: int = 30
    LOWEST_NOTE_NO: int = 58
    freq: float = calc_freq(note_no)

    vco_as: np.ndarray = np.repeat(0, N_PARTIAL)
    vco_ds: np.ndarray = np.repeat(0, N_PARTIAL)
    vco_ss: np.ndarray = np.repeat(1, N_PARTIAL)
    vco_rs: np.ndarray = np.repeat(0, N_PARTIAL)
    vco_gates: np.ndarray = np.repeat(duration, N_PARTIAL)
    vco_durs: np.ndarray = np.repeat(duration, N_PARTIAL)
    vco_offsets: np.ndarray = freq * np.arange(1, 1+N_PARTIAL)
    vco_depths: np.ndarray = np.repeat(0, N_PARTIAL)

    vca_delays: np.ndarray = calc_delayar(vco_offsets, p1=0, p2=-0.05, p3=8000/12, p4=0.1, is_delay=True)
    vca_as: np.ndarray = calc_delayar(vco_offsets, p1=0, p2=0.05, p3=8000/12, p4=0.1, is_sub=True)
    vca_ss: np.ndarray = np.repeat(1, N_PARTIAL)
    vca_rs: np.ndarray = calc_delayar(vco_offsets, p1=0, p2=0.2, p3=8000/12, p4=0.4, is_sub=True)
    vca_gates: np.ndarray = np.repeat(gate, N_PARTIAL)
    vca_durs: np.ndarray = np.repeat(duration, N_PARTIAL)
    vca_offsets: np.ndarray = np.repeat(0, N_PARTIAL)
    vca_depths: np.ndarray = note_to_vca_depths[note_no-LOWEST_NOTE_NO]

    y: np.ndarray = np.zeros(int(duration * sr))
    for i in range(N_PARTIAL):
        jitter: np.ndaray = biquad_filter(data=noise(sec=duration, sr=sr),
                                          filter_type="lowpass", fc=40, Q=1/np.sqrt(2), sr=sr)
        jitter = calc_delayar(note_no, p1=108, p2=1, p3=150/12, p4=20) * jitter / np.max(np.abs(jitter))
        vco: np.ndarray = jitter + vco_offsets[i] \
                        + vco_depths[i] * adsr(vco_as[i], vco_ds[i], vco_ss[i], vco_rs[i], vco_gates[i], vco_durs[i], sr=sr)

        shimmer: np.ndarray = biquad_filter(data=noise(sec=duration, sr=sr),
                                            filter_type="lowpass", fc=40, Q=1/np.sqrt(2), sr=sr)
        shimmer = calc_delayar(i+1, p1=1, p2=-0.3, p3=100/12, p4=0.8) * shimmer / np.max(np.abs(shimmer))
        vca: np.ndarray = vca_offsets[i] \
                        + vca_depths[i] * cos_env(vca_delays[i], vca_as[i], vca_ss[i], vca_rs[i], vca_gates[i], vca_durs[i], sr=sr)
        vca = np.maximum((1 + shimmer) * vca, 0)

        y += vca * sine(fs=vco, sr=sr, sec=duration)
    return (velocity / 127) / np.max(np.abs(y)) * y


def bassoon(note_no: int, velocity: int, gate: float, duration: float, sr: int =44100) -> np.ndarray:
    note_to_vca_depths: np.ndarray = np.array([
        [0.069, 0.095, 0.101, 0.094, 0.146, 0.153, 0.176, 0.194, 0.214, 0.144, 0.068, 0.046, 0.041, 0.036, 0.030, 0.023, 0.032, 0.043, 0.039, 0.031, 0.022, 0.027, 0.017, 0.011, 0.015, 0.014, 0.012, 0.009, 0.011, 0.012],
        [0.069, 0.092, 0.104, 0.095, 0.143, 0.186, 0.256, 0.249, 0.237, 0.143, 0.072, 0.054, 0.060, 0.043, 0.025, 0.022, 0.028, 0.039, 0.036, 0.042, 0.030, 0.037, 0.019, 0.013, 0.020, 0.018, 0.013, 0.012, 0.014, 0.018],
        [0.069, 0.094, 0.105, 0.093, 0.122, 0.207, 0.374, 0.259, 0.220, 0.105, 0.053, 0.034, 0.044, 0.036, 0.022, 0.027, 0.033, 0.038, 0.035, 0.036, 0.027, 0.025, 0.016, 0.015, 0.016, 0.015, 0.012, 0.010, 0.009, 0.013],
        [0.069, 0.100, 0.113, 0.116, 0.119, 0.262, 0.429, 0.195, 0.168, 0.073, 0.038, 0.018, 0.017, 0.021, 0.025, 0.032, 0.035, 0.034, 0.027, 0.018, 0.013, 0.008, 0.010, 0.010, 0.008, 0.008, 0.008, 0.005, 0.004, 0.005],
        [0.069, 0.098, 0.130, 0.161, 0.158, 0.349, 0.348, 0.122, 0.068, 0.050, 0.035, 0.022, 0.012, 0.026, 0.032, 0.036, 0.032, 0.027, 0.015, 0.008, 0.007, 0.007, 0.007, 0.006, 0.005, 0.004, 0.005, 0.003, 0.004, 0.003],
        [0.069, 0.095, 0.146, 0.204, 0.204, 0.431, 0.270, 0.108, 0.015, 0.029, 0.031, 0.030, 0.014, 0.045, 0.041, 0.045, 0.031, 0.020, 0.012, 0.006, 0.009, 0.007, 0.005, 0.005, 0.004, 0.002, 0.005, 0.003, 0.003, 0.003],
        [0.069, 0.098, 0.152, 0.222, 0.253, 0.533, 0.251, 0.109, 0.035, 0.030, 0.035, 0.033, 0.018, 0.053, 0.040, 0.041, 0.022, 0.013, 0.010, 0.006, 0.009, 0.004, 0.005, 0.008, 0.005, 0.002, 0.004, 0.002, 0.002, 0.003],
        [0.069, 0.106, 0.150, 0.231, 0.331, 0.548, 0.188, 0.082, 0.047, 0.056, 0.038, 0.027, 0.031, 0.045, 0.026, 0.020, 0.011, 0.007, 0.005, 0.005, 0.007, 0.004, 0.007, 0.010, 0.005, 0.002, 0.002, 0.003, 0.003, 0.004],
        [0.069, 0.113, 0.145, 0.247, 0.455, 0.430, 0.094, 0.075, 0.058, 0.073, 0.025, 0.026, 0.045, 0.037, 0.017, 0.009, 0.006, 0.004, 0.004, 0.004, 0.007, 0.004, 0.007, 0.006, 0.003, 0.002, 0.002, 0.003, 0.004, 0.003],
        [0.069, 0.105, 0.127, 0.228, 0.637, 0.275, 0.038, 0.078, 0.066, 0.054, 0.016, 0.024, 0.039, 0.029, 0.016, 0.011, 0.005, 0.003, 0.005, 0.004, 0.005, 0.003, 0.004, 0.002, 0.003, 0.002, 0.003, 0.003, 0.003, 0.003],
        [0.069, 0.094, 0.109, 0.256, 0.674, 0.140, 0.071, 0.088, 0.051, 0.028, 0.026, 0.036, 0.031, 0.020, 0.014, 0.008, 0.006, 0.006, 0.008, 0.003, 0.002, 0.003, 0.002, 0.003, 0.003, 0.004, 0.003, 0.003, 0.002, 0.003],
        [0.069, 0.090, 0.103, 0.388, 0.499, 0.057, 0.114, 0.112, 0.030, 0.029, 0.037, 0.049, 0.030, 0.015, 0.008, 0.006, 0.008, 0.012, 0.010, 0.002, 0.002, 0.003, 0.002, 0.004, 0.004, 0.005, 0.002, 0.003, 0.003, 0.002],
        [0.069, 0.099, 0.150, 0.608, 0.375, 0.057, 0.080, 0.108, 0.020, 0.054, 0.044, 0.031, 0.022, 0.009, 0.008, 0.008, 0.011, 0.010, 0.006, 0.003, 0.003, 0.003, 0.003, 0.004, 0.005, 0.005, 0.003, 0.003, 0.004, 0.002],
        [0.069, 0.112, 0.266, 0.769, 0.251, 0.104, 0.112, 0.073, 0.024, 0.072, 0.050, 0.022, 0.016, 0.006, 0.008, 0.014, 0.011, 0.004, 0.003, 0.004, 0.003, 0.005, 0.003, 0.005, 0.005, 0.006, 0.005, 0.005, 0.004, 0.001],
        [0.069, 0.124, 0.401, 0.604, 0.080, 0.114, 0.163, 0.044, 0.047, 0.071, 0.044, 0.024, 0.014, 0.008, 0.010, 0.012, 0.005, 0.002, 0.004, 0.005, 0.004, 0.006, 0.002, 0.005, 0.005, 0.010, 0.004, 0.004, 0.004, 0.002],
        [0.069, 0.142, 0.572, 0.439, 0.045, 0.111, 0.099, 0.058, 0.067, 0.059, 0.028, 0.017, 0.014, 0.015, 0.013, 0.005, 0.002, 0.002, 0.004, 0.003, 0.005, 0.006, 0.004, 0.007, 0.003, 0.007, 0.004, 0.003, 0.004, 0.002],
        [0.069, 0.164, 0.704, 0.447, 0.156, 0.188, 0.042, 0.096, 0.065, 0.045, 0.017, 0.016, 0.019, 0.021, 0.008, 0.004, 0.004, 0.004, 0.007, 0.003, 0.005, 0.005, 0.007, 0.008, 0.003, 0.005, 0.006, 0.003, 0.003, 0.002],
        [0.069, 0.177, 0.752, 0.285, 0.210, 0.228, 0.039, 0.095, 0.046, 0.037, 0.011, 0.019, 0.022, 0.018, 0.005, 0.006, 0.006, 0.005, 0.009, 0.003, 0.004, 0.005, 0.008, 0.007, 0.005, 0.006, 0.004, 0.004, 0.003, 0.002],
        [0.069, 0.170, 0.767, 0.111, 0.113, 0.123, 0.054, 0.062, 0.030, 0.022, 0.014, 0.016, 0.014, 0.009, 0.006, 0.006, 0.004, 0.003, 0.006, 0.005, 0.003, 0.005, 0.006, 0.005, 0.003, 0.004, 0.002, 0.003, 0.003, 0.002],
        [0.069, 0.164, 0.658, 0.096, 0.053, 0.040, 0.066, 0.034, 0.018, 0.011, 0.017, 0.011, 0.006, 0.005, 0.006, 0.005, 0.003, 0.002, 0.004, 0.005, 0.003, 0.004, 0.005, 0.003, 0.001, 0.002, 0.001, 0.001, 0.002, 0.001],
        [0.069, 0.169, 0.437, 0.088, 0.054, 0.041, 0.045, 0.015, 0.009, 0.010, 0.012, 0.005, 0.003, 0.004, 0.004, 0.003, 0.002, 0.001, 0.003, 0.003, 0.002, 0.002, 0.003, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001],
        [0.069, 0.172, 0.254, 0.054, 0.036, 0.050, 0.022, 0.005, 0.005, 0.011, 0.007, 0.002, 0.002, 0.004, 0.002, 0.002, 0.002, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.001],
        [0.069, 0.262, 0.147, 0.035, 0.024, 0.059, 0.020, 0.003, 0.008, 0.010, 0.005, 0.003, 0.003, 0.004, 0.002, 0.002, 0.002, 0.002, 0.001, 0.002, 0.001, 0.002, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.001],
        [0.069, 0.418, 0.081, 0.048, 0.035, 0.063, 0.021, 0.006, 0.012, 0.005, 0.004, 0.005, 0.004, 0.003, 0.002, 0.002, 0.002, 0.004, 0.001, 0.001, 0.001, 0.002, 0.001, 0.001, 0.001, 0.001, 0.000, 0.001, 0.000, 0.001],
        [0.069, 0.472, 0.052, 0.056, 0.058, 0.045, 0.011, 0.011, 0.012, 0.003, 0.002, 0.005, 0.004, 0.002, 0.002, 0.001, 0.001, 0.003, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.001, 0.000, 0.000, 0.000, 0.001],
        [0.069, 0.474, 0.041, 0.038, 0.064, 0.024, 0.008, 0.013, 0.007, 0.003, 0.001, 0.004, 0.005, 0.002, 0.002, 0.002, 0.001, 0.002, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.001, 0.001, 0.000, 0.000, 0.000],
        [0.069, 0.406, 0.031, 0.021, 0.052, 0.013, 0.010, 0.009, 0.003, 0.002, 0.001, 0.003, 0.005, 0.002, 0.002, 0.002, 0.000, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.001, 0.001, 0.000, 0.000, 0.000],
        [0.069, 0.267, 0.033, 0.025, 0.033, 0.007, 0.008, 0.004, 0.002, 0.002, 0.001, 0.003, 0.003, 0.001, 0.001, 0.001, 0.000, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.069, 0.260, 0.043, 0.051, 0.017, 0.008, 0.008, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.069, 0.303, 0.043, 0.073, 0.010, 0.011, 0.008, 0.002, 0.005, 0.002, 0.002, 0.002, 0.003, 0.000, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.069, 0.238, 0.028, 0.065, 0.006, 0.012, 0.005, 0.002, 0.006, 0.002, 0.002, 0.002, 0.002, 0.001, 0.001, 0.001, 0.000, 0.001, 0.000, 0.000, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.001, 0.000, 0.000],
        [0.069, 0.131, 0.021, 0.037, 0.006, 0.010, 0.003, 0.002, 0.004, 0.002, 0.002, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.001, 0.000, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.069, 0.096, 0.037, 0.015, 0.010, 0.004, 0.002, 0.001, 0.002, 0.001, 0.001, 0.000, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.069, 0.090, 0.053, 0.006, 0.011, 0.001, 0.002, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.069, 0.069, 0.051, 0.005, 0.009, 0.001, 0.002, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.069, 0.068, 0.042, 0.005, 0.004, 0.001, 0.002, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.069, 0.050, 0.023, 0.006, 0.002, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.069, 0.021, 0.010, 0.007, 0.002, 0.001, 0.001, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.069, 0.011, 0.010, 0.005, 0.002, 0.001, 0.001, 0.001, 0.000, 0.001, 0.001, 0.000, 0.000, 0.001, 0.000, 0.000, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.069, 0.015, 0.006, 0.002, 0.002, 0.001, 0.001, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
        [0.069, 0.024, 0.005, 0.001, 0.003, 0.001, 0.000, 0.000, 0.000, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000]
    ])
    N_PARTIAL: int = 30
    LOWEST_NOTE_NO: int = 34
    freq: float = calc_freq(note_no)

    vco_as: np.ndarray = np.repeat(0, N_PARTIAL)
    vco_ds: np.ndarray = np.repeat(0, N_PARTIAL)
    vco_ss: np.ndarray = np.repeat(1, N_PARTIAL)
    vco_rs: np.ndarray = np.repeat(0, N_PARTIAL)
    vco_gates: np.ndarray = np.repeat(duration, N_PARTIAL)
    vco_durs: np.ndarray = np.repeat(duration, N_PARTIAL)
    vco_offsets: np.ndarray = freq * np.arange(1, 1+N_PARTIAL)
    vco_depths: np.ndarray = np.repeat(0, N_PARTIAL)

    vca_delays: np.ndarray = calc_delayar(vco_offsets, p1=0, p2=-0.05, p3=8000/12, p4=0.1, is_delay=True)
    vca_as: np.ndarray = calc_delayar(vco_offsets, p1=0, p2=0.05, p3=8000/12, p4=0.1, is_sub=True)
    vca_ss: np.ndarray = np.repeat(1, N_PARTIAL)
    vca_rs: np.ndarray = calc_delayar(vco_offsets, p1=0, p2=0.2, p3=8000/12, p4=0.4, is_sub=True)
    vca_gates: np.ndarray = np.repeat(gate, N_PARTIAL)
    vca_durs: np.ndarray = np.repeat(duration, N_PARTIAL)
    vca_offsets: np.ndarray = np.repeat(0, N_PARTIAL)
    vca_depths: np.ndarray = note_to_vca_depths[note_no-LOWEST_NOTE_NO]

    y: np.ndarray = np.zeros(int(duration * sr))
    for i in range(N_PARTIAL):
        jitter: np.ndaray = biquad_filter(data=noise(sec=duration, sr=sr),
                                          filter_type="lowpass", fc=40, Q=1/np.sqrt(2), sr=sr)
        jitter = calc_delayar(note_no, p1=108, p2=1, p3=150/12, p4=20) * jitter / np.max(np.abs(jitter))
        vco: np.ndarray = jitter + vco_offsets[i] \
                        + vco_depths[i] * adsr(vco_as[i], vco_ds[i], vco_ss[i], vco_rs[i], vco_gates[i], vco_durs[i], sr=sr)

        shimmer: np.ndarray = biquad_filter(data=noise(sec=duration, sr=sr),
                                            filter_type="lowpass", fc=40, Q=1/np.sqrt(2), sr=sr)
        shimmer = calc_delayar(i+1, p1=1, p2=-0.3, p3=100/12, p4=0.8) * shimmer / np.max(np.abs(shimmer))
        vca: np.ndarray = vca_offsets[i] \
                        + vca_depths[i] * cos_env(vca_delays[i], vca_as[i], vca_ss[i], vca_rs[i], vca_gates[i], vca_durs[i], sr=sr)
        vca = np.maximum((1 + shimmer) * vca, 0)

        y += vca * sine(fs=vco, sr=sr, sec=duration)
    return (velocity / 127) / np.max(np.abs(y)) * y